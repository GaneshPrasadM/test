package com.websystique.spring.configuration;

import java.util.concurrent.atomic.AtomicInteger;

import javax.jws.WebService;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import org.springframework.context.support.AbstractApplicationContext;

import com.websystique.spring.model.MeerkatParameters;
import com.websystique.spring.service.MeerkatParametersService;

@WebService(targetNamespace = "http://meerkatWSDLservice/", portName = "RequestHandlerPort", serviceName = "RequestHandlerService")

public class ProducerApplication {

	static final Logger LOG = LoggerFactory.getLogger(ProducerApplication.class);
	
	private static AtomicInteger id = new AtomicInteger();
	
	public static void main(String[] args){
		AbstractApplicationContext context = new AnnotationConfigApplicationContext(
                AppConfig.class);
 
      //  ProductService productService = (ProductService) context.getBean("productService");
        MeerkatParametersService meerkatParametersService=(MeerkatParametersService) context.getBean("meerkatParametersService");
        
     //   Product product = getProduct();
        MeerkatParameters meerkatParameters=getMeerkatParameters();
    //    LOG.info("Application : sending order {}", product);
    //    productService.sendProduct(product);
        meerkatParametersService.sendParameters(meerkatParameters);
        try {
			Thread.sleep(60000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}

        ((AbstractApplicationContext)context).close();
	}
	
	
//	private static Product getProduct() {
//		Product p = new Product();
//		p.setName("Product "+id.incrementAndGet());
//		p.setProductId(BasicUtil.getUniqueId());
//		p.setQuantity(2);
//		return null;
//	}


	private static MeerkatParameters getMeerkatParameters(){
		MeerkatParameters meerkatParameters = new MeerkatParameters();
		meerkatParameters.setBuldingNumber(1);
		meerkatParameters.setStreetName("streetName");
		meerkatParameters.setPostalCode(1);
		meerkatParameters.setLatitude(12);
		meerkatParameters.setLongitude(23);
		meerkatParameters.setCity("city");
		meerkatParameters.setCountry("country");
		meerkatParameters.setState("state");
		meerkatParameters.setService("service");
		meerkatParameters.setTechnology("technology");
		meerkatParameters.setSpeed(220);
		meerkatParameters.setLoad(1);
		return null;
	}
}
