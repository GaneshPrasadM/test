package com.websystique.spring.configuration;

import java.util.concurrent.atomic.AtomicInteger;

import javax.jws.WebService;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import org.springframework.context.support.AbstractApplicationContext;

import com.websystique.spring.model.MeerkatParameters;
import com.websystique.spring.service.MeerkatParametersService;

@WebService(targetNamespace = "http://meerkatWSDLservice/", portName = "RequestHandlerPort", serviceName = "RequestHandlerService")

public class ProducerApplication {
	  public MeerkatParameters setmeerkatParameters(MeerkatParameters meerkatParameters){
	        meerkatParameters.setBuldingNumber(meerkatParameters.getBuldingNumber());
			meerkatParameters.setStreetName(meerkatParameters.getStreetName());
			meerkatParameters.setPostalCode(meerkatParameters.getPostalCode());
			meerkatParameters.setLatitude(meerkatParameters.getLatitude());
			meerkatParameters.setLongitude(meerkatParameters.getLongitude());
			meerkatParameters.setCity(meerkatParameters.getCity());
			meerkatParameters.setCountry(meerkatParameters.getCountry());
			meerkatParameters.setState(meerkatParameters.getState());
			meerkatParameters.setService(meerkatParameters.getService());
			meerkatParameters.setTechnology(meerkatParameters.getTechnology());
			meerkatParameters.setSpeed(meerkatParameters.getSpeed());
			meerkatParameters.setLoad(meerkatParameters.getLoad());
	        meerkatParametersService.sendParameters(meerkatParameters);
	        try {
				Thread.sleep(60000);
			} catch (InterruptedException e) {
				e.printStackTrace();
		

	        ((AbstractApplicationContext)context).close();
		}
		
		return null;
	        }

	public  static void main(String args[]){
		final Logger LOG = LoggerFactory.getLogger(ProducerApplication.class);
		
		AtomicInteger id = new AtomicInteger();
		
		
			AbstractApplicationContext context = new AnnotationConfigApplicationContext(
	                AppConfig.class);
	 
	      //  ProductService productService = (ProductService) context.getBean("productService");
	        MeerkatParametersService meerkatParametersService=(MeerkatParametersService) context.getBean("meerkatParametersService");
	        
	     //   Product product = getProduct();
	      //  MeerkatParameters meerkatParameters=getMeerkatParameters(MeerkatParameters meerkatParameters);
	    //    LOG.info("Application : sending order {}", product);
	    //    productService.sendProduct(product);
	      
	}
}
